{
  "name": "protoobject",
  "version": "2.1.6",
  "description": "A universal class for creating any JSON objects and simple manipulations with them.",
  "main": "./dist/cjs/index.js",
  "module": "./dist/esm/index.js",
  "types": "./dist/types/index.d.ts",
  "exports": {
    ".": {
      "import": {
        "types": "./dist/types/index.d.ts",
        "default": "./dist/esm/index.js"
      },
      "require": {
        "types": "./dist/types/index.d.ts",
        "default": "./dist/cjs/index.js"
      }
    },
    "./browser": {
      "import": {
        "types": "./dist/types/browser.d.ts",
        "default": "./dist/esm/browser.js"
      },
      "require": {
        "types": "./dist/types/browser.d.ts",
        "default": "./dist/cjs/browser.js"
      }
    },
    "./package.json": "./package.json"
  },
  "browser": "./dist/esm/browser.js",
  "files": [
    "dist/esm/**/*.js{,on}",
    "dist/cjs/**/*.js{,on}",
    "dist/types/**/*",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "test": "npm run test:ts && npm run test:js && npm run test:sql && npm run test:sqlite && npm run test:stream && npm run test:crypto && npm run test:fs && npm run test:tcp && npm run test:browser-node && npm run test:transformers",
    "test:transformers": "node --import=tsx --test test/transformers/*.test.ts",
    "test:ts": "node --import=tsx --test test/ts/*.test.ts",
    "test:js": "node --test test/js/*.test.js",
    "test:sql": "node --experimental-sqlite --import=tsx --test test/sql/*.test.ts",
    "test:sqlite": "node --experimental-sqlite --import=tsx --test test/sqlite/*.test.ts",
    "test:stream": "node --import=tsx --test test/stream/*.test.ts",
    "test:tcp": "node --import=tsx --test test/tcp/*.test.ts",
    "test:crypto": "node --import=tsx --test test/crypto/*.test.ts",
    "test:fs": "node --import=tsx --test test/fs/*.test.ts",
    "test:browser": "echo 'Open test/browser/browser-esm-test.html in your browser to run browser tests'",
    "test:browser-node": "node --import=tsx --test test/browser/*.test.ts",
    "cov": "./node_modules/.bin/nyc npm run test:ts",
    "lint": "./node_modules/.bin/eslint src/**/*.ts",
    "prebuild": "npm run lint",
    "build": "npm run build:clean && npm run build:cjs && npm run build:esm && npm run build:types && npm run build:package-json",
    "build:clean": "rm -rf dist",
    "build:cjs": "./node_modules/.bin/tsc -p tsconfig.cjs.json",
    "build:esm": "./node_modules/.bin/tsc -p tsconfig.esm.json",
    "build:types": "./node_modules/.bin/tsc -p tsconfig.types.json",
    "build:package-json": "echo '{\"type\":\"commonjs\"}' > dist/cjs/package.json && echo '{\"type\":\"module\"}' > dist/esm/package.json",
    "example:stream-chat:server": "node --import=tsx examples/stream-chat/server.ts",
    "example:stream-chat:client": "node --import=tsx examples/stream-chat/client.ts",
    "update": "eval \"$(node -e 'const t = require(`./package.json`);const ignore = require(`./ignoreUpdatesModules.json`);console.log(`npm i ${(Object.keys(t.dependencies || {}).filter((e)=>ignore.base.indexOf(e) === -1).map((e)=>(`${e}@latest`)).join(` `))} --save&&npm i ${(Object.keys(t.devDependencies || {}).filter((e)=>ignore.dev.indexOf(e) === -1).map((e)=>(`${e}@latest`)).join(` `))} --save-dev`);')\""
  },
  "author": {
    "name": "Siarhei Dudko",
    "email": "siarhei@dudko.dev",
    "url": "https://dudko.dev/"
  },
  "funding": [
    {
      "type": "individual",
      "url": "http://dudko.dev/donate"
    },
    {
      "type": "buymeacoffee",
      "url": "https://www.buymeacoffee.com/dudko.dev"
    },
    {
      "type": "paypal",
      "url": "https://paypal.me/dudkodev"
    },
    {
      "type": "patreon",
      "url": "https://patreon.com/dudko_dev"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "github:dudko-dev/protoobject"
  },
  "keywords": [
    "protoobject",
    "json",
    "jsonstream",
    "object",
    "class",
    "converter",
    "transformer",
    "base-class",
    "class-converter",
    "class-transformer"
  ],
  "homepage": "https://github.com/dudko-dev/protoobject",
  "devDependencies": {
    "@eslint/js": "^9.38.0",
    "@types/node": "^22.4.1",
    "eslint": "^9.38.0",
    "nyc": "^17.1.0",
    "prettier": "^3.5.2",
    "tsx": "^4.20.6",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.2"
  },
  "engines": {
    "node": ">=16"
  },
  "directorie": {
    "man": "./docs/",
    "test": "./test/"
  },
  "dependencies": {
    "@sergdudko/objectstream": "^4.0.8"
  }
}
